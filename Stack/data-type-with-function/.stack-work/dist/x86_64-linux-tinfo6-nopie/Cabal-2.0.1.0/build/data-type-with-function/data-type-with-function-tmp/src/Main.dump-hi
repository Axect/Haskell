
==================== FINAL INTERFACE ====================
2018-04-03 03:37:35.420901983 UTC

interface main:Main 8022
  interface hash: f858cee9373936b9c4651029c3788f98
  ABI hash: b3da2609ccc8a1c7169b591333ce5ef0
  export-list hash: df64667a7ac7321dbec2a5ca3a3d5004
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 29b6a11391b9b5c3a8c47a6fea1bde74
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.apply
  Main.compose
  Main.main
  Main.Fix{Main.Fix}
  Main.Func{Main.Func}
  Main.Ghost{Main.Ghost}
module dependencies:
package dependencies: base-4.10.1.0* ghc-prim-0.5.1.1
                      integer-gmp-1.0.1.0
orphans: base-4.10.1.0:GHC.Float base-4.10.1.0:GHC.Base
family instance modules: base-4.10.1.0:Control.Applicative
                         base-4.10.1.0:Data.Either base-4.10.1.0:Data.Functor.Const
                         base-4.10.1.0:Data.Functor.Identity base-4.10.1.0:Data.Monoid
                         base-4.10.1.0:Data.Type.Equality base-4.10.1.0:GHC.Generics
                         base-4.10.1.0:GHC.IO.Exception base-4.10.1.0:GHC.TypeLits
                         base-4.10.1.0:GHC.TypeNats
import  -/  base-4.10.1.0:GHC.Base 782fd99b5e36f3698a26179a49afca64
import  -/  base-4.10.1.0:GHC.Float 28e3bf9e258278ac8084e9cab43fd542
import  -/  base-4.10.1.0:GHC.Num 6e1dc5d36d99a802edb39b92bb1923b8
import  -/  base-4.10.1.0:GHC.Real 3c62834bc25e762eabc44149c4cc142d
import  -/  base-4.10.1.0:GHC.Show 0a8ce2b5e533d1c2cfb7954e6736be45
import  -/  base-4.10.1.0:Prelude 31945b7d0084063347fc52506d3a4020
import  -/  base-4.10.1.0:System.IO 6e5bb580370d8d71dc5888f723cea4b4
import  -/  ghc-prim-0.5.1.1:GHC.Types b1fd0716441595db508c1a74387bf394
27988e06fc6c8b3f7d53654a54323cf8
  $fShowGhost :: GHC.Show.Show (Main.Ghost a)
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun: @ a.
                  @ (Main.Ghost a)
                  (Main.$fShowGhost_$cshowsPrec @ a)
                  (Main.$fShowGhost_$cshow @ a)
                  (Main.$fShowGhost_$cshowList @ a) -}
27988e06fc6c8b3f7d53654a54323cf8
  $fShowGhost1 :: Main.Ghost a -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*H><L,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ a (ds :: Main.Ghost a) (eta :: GHC.Base.String) ->
                 case ds of wild { Main.Ghost ->
                 GHC.Base.augment
                   @ GHC.Types.Char
                   (\ @ b
                      (c :: GHC.Types.Char -> b -> b)[OneShot]
                      (n :: b)[OneShot] ->
                    GHC.Base.foldr @ GHC.Types.Char @ b c n Main.$fShowGhost2)
                   eta }) -}
9a9f177eb40cfb7183a79e245199fe71
  $fShowGhost2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.$fShowGhost3) -}
5c5005e2b90b6f5a2cf2eb31a6dc4aa0
  $fShowGhost3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Ghost"#) -}
27988e06fc6c8b3f7d53654a54323cf8
  $fShowGhost_$cshow :: Main.Ghost a -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*H>,
     Unfolding: InlineRule (1, True, False)
                (\ @ a (x :: Main.Ghost a) ->
                 case x of wild { Main.Ghost -> Main.$fShowGhost2 }) -}
27988e06fc6c8b3f7d53654a54323cf8
  $fShowGhost_$cshowList :: [Main.Ghost a] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (\ @ a ->
                 GHC.Show.showList__ @ (Main.Ghost a) (Main.$fShowGhost1 @ a)) -}
27988e06fc6c8b3f7d53654a54323cf8
  $fShowGhost_$cshowsPrec ::
    GHC.Types.Int -> Main.Ghost a -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*H><L,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ a
                   (ds :: GHC.Types.Int)
                   (ds1 :: Main.Ghost a)
                   (eta :: GHC.Base.String) ->
                 case ds1 of wild { Main.Ghost ->
                 GHC.Base.augment
                   @ GHC.Types.Char
                   (\ @ b
                      (c :: GHC.Types.Char -> b -> b)[OneShot]
                      (n :: b)[OneShot] ->
                    GHC.Base.foldr @ GHC.Types.Char @ b c n Main.$fShowGhost2)
                   eta }) -}
2c58dc47b54608607ad604babf688138
  $tc'Fix :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10107763582125174150##
                   18002215914464014091##
                   Main.$trModule
                   Main.$tc'Fix2
                   1#
                   Main.$tc'Fix1) -}
7238921173c4eb33bf51acf69f314c14
  $tc'Fix1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
bcf1cea06c32ae9e5e54ed474e0875e7
  $tc'Fix2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tc'Fix3) -}
47a81bdd0c13b3d6b0c014d3d5ed1bf9
  $tc'Fix3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Fix"#) -}
81802c23ecd3a6a760a10fba615b1e2a
  $tc'Func :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8520183854607718848##
                   8133431432712939474##
                   Main.$trModule
                   Main.$tc'Func2
                   2#
                   Main.$tc'Func1) -}
61a4ae35adecfbbef235a5d35d832268
  $tc'Func1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
7d2ba196d4b4d5c8a24539c22484648d
  $tc'Func2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tc'Func3) -}
e36348b66c57b5f9c7fc6a9486f8368d
  $tc'Func3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Func"#) -}
1e273220e534af6a8fa5b04d0f828e1f
  $tc'Ghost :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17333686329937825829##
                   12234167724509728888##
                   Main.$trModule
                   Main.$tc'Ghost2
                   1#
                   Main.$tc'Ghost1) -}
27a7df36940659bd08cdedc86e9a51ce
  $tc'Ghost1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m1, Inline: [~] -}
16354cbca1e81739ddb481e4a2178d96
  $tc'Ghost2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tc'Ghost3) -}
503dcae794872742e6a86e8627bee99d
  $tc'Ghost3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Ghost"#) -}
7a0fc2c6694c5ff5d38a78efdf852291
  $tcFix :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4810903780012070250##
                   13230522949258734077##
                   Main.$trModule
                   Main.$tcFix2
                   0#
                   Main.$tcFix1) -}
f63b222983ffafc86e914c0be6a649a5
  $tcFix1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
ff3c2f05b3619e9ec735c4562d5714ee
  $tcFix2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tcFix3) -}
faa2abe5b9509fb478574857afef8b16
  $tcFix3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Fix"#) -}
04392ee1033d632a7cf8b159a048634d
  $tcFunc :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2640844112312969220##
                   9789695719228725900##
                   Main.$trModule
                   Main.$tcFunc1
                   0#
                   GHC.Types.krep$*->*->*) -}
39498ae4c4b3f4dbc40e956fbfadd6e4
  $tcFunc1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tcFunc2) -}
1742e1a0137568679c34b5a2729748c4
  $tcFunc2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Func"#) -}
3d555f3dab4134b9c18a9220ac1c1457
  $tcGhost :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8884731311327703662##
                   8884858239012770350##
                   Main.$trModule
                   Main.$tcGhost1
                   0#
                   GHC.Types.krep$*Arr*) -}
35d0a82650e91d49e12a6192c34c3ecd
  $tcGhost1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$fShowGhost3) -}
9d72b2fddb818bcd8919052935e0f1f3
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Main.$trModule3 Main.$trModule1) -}
3108ceeaf5a318be844de422b45de9d8
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$trModule2) -}
e5875966b74dad2d29772660b8a75e33
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Main"#) -}
33bd129667974f0a0ba4a893af79107d
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$trModule4) -}
d026be77cb9ced20e35a61514e0458aa
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("main"#) -}
efed678711164ce503c4909dd6af65e8
  type role Fix nominal
  newtype Fix (f :: * -> *) = Fix (f (Main.Fix f))
1a48b5033e69386bf5bbf33c5353cce9
  newtype Func a b = Func (a -> b)
27988e06fc6c8b3f7d53654a54323cf8
  type role Ghost phantom
  data Ghost a = Ghost
8182256aabe6ab972bd4b7854b966401
  apply :: Main.Func a b -> a -> b
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (0, True, True)
                Main.apply1
                  `cast`
                (forall (a :: <*>_N) (b :: <*>_N).
                 <Main.Func a b>_R ->_R Main.N:Func[0] <a>_N <b>_N) -}
d69081f484a5446568c3e775f8a5dbe2
  apply1 :: Main.Func a b -> Main.Func a b
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, True)
                (\ @ a @ b (ds :: Main.Func a b) -> ds) -}
c110c81aec02e93fcaf0b855195579af
  compose :: Main.Func a b -> Main.Func b c -> Main.Func a c
  {- Arity: 3, HasNoCafRefs, Strictness: <L,C(U)><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                Main.compose1
                  `cast`
                (forall (a :: <*>_N) (b :: <*>_N) (c :: <*>_N).
                 <Main.Func a b>_R
                 ->_R <Main.Func b c>_R
                 ->_R Sym (Main.N:Func[0]) <a>_N <c>_N) -}
a9a156d8d766701ef62da058e00a2ba5
  compose1 :: Main.Func a b -> Main.Func b c -> a -> c
  {- Arity: 3, HasNoCafRefs, Strictness: <L,C(U)><L,C(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ @ a @ b @ c (ds :: Main.Func a b) (ds1 :: Main.Func b c) ->
                 GHC.Base..
                   @ b
                   @ c
                   @ a
                   ds1 `cast` (Main.N:Func[0] <b>_N <c>_N)
                   ds `cast` (Main.N:Func[0] <a>_N <b>_N)) -}
b7cfec0a5ff1af80adc23be133afdc10
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
fca02e42a8cbe7448018813f64885c0f
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Main.main11
                        GHC.Types.True
                        s of ds1 { (#,#) ipv ipv1 ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Main.main9
                        GHC.Types.True
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Main.main6
                        GHC.Types.True
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Main.main4
                        GHC.Types.True
                        ipv4 of ds4 { (#,#) ipv6 ipv7 ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Main.$fShowGhost2
                        GHC.Types.True
                        ipv6 of ds5 { (#,#) ipv8 ipv9 ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Main.main2
                        GHC.Types.True
                        ipv8 of ds6 { (#,#) ipv10 ipv11 ->
                 GHC.IO.Handle.Text.hPutStr2
                   GHC.IO.Handle.FD.stdout
                   Main.$fShowGhost2
                   GHC.Types.True
                   ipv10 } } } } } }) -}
3d680617e6b3459a353d9f5454742aeb
  main10 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("is an identity. Applying a value should not change it"#) -}
188b6e3ad067a26f4ab048922f5f5487
  main11 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main12) -}
3f3c822ccfc5071da0c18418656f4409
  main12 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("Composeing square and square root fnuctions"#) -}
dc99f2722e61654f1976b22d17c13231
  main13 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
77816b207226a3d407bbffa00c742c52
  main2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main3) -}
be934f905c5744d7dfbff15411603e82
  main3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("After fixing, "#) -}
862710edfec174c9116939d4b187661a
  main4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main5) -}
a99a65acf17d017aaf06d2237a7ad3d8
  main5 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Original Value is "#) -}
b6b818e555bf590b6038d9244baf717e
  main6 :: GHC.Base.String
  {- Unfolding: (case GHC.Integer.Type.decodeDoubleInteger
                        (GHC.Prim.sqrtDouble# 9.0##) of ds1 { (#,#) ipv ipv1 ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<# ipv1 0#) of wild1 {
                   GHC.Types.False
                   -> case GHC.Show.$w$cshowsPrec4
                             0#
                             (GHC.Integer.Type.shiftLInteger ipv ipv1)
                             (GHC.Types.[] @ GHC.Types.Char) of ww2 { (#,#) ww3 ww4 ->
                      GHC.Types.: @ GHC.Types.Char ww3 ww4 }
                   GHC.Types.True
                   -> let {
                        s :: GHC.Prim.Int# = GHC.Prim.negateInt# ipv1
                      } in
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.># s 52#) of wild2 {
                        GHC.Types.False
                        -> case GHC.Integer.Type.integerToInt ipv of n { DEFAULT ->
                           case GHC.Show.$w$cshowsPrec4
                                  0#
                                  (GHC.Integer.Type.smallInteger (GHC.Prim.uncheckedIShiftRA# n s))
                                  (GHC.Types.[] @ GHC.Types.Char) of ww2 { (#,#) ww3 ww4 ->
                           GHC.Types.: @ GHC.Types.Char ww3 ww4 } }
                        GHC.Types.True
                        -> case GHC.Integer.Type.ltInteger#
                                  ipv
                                  Main.main8 of wild3 { DEFAULT ->
                           case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild3 of wild4 {
                             GHC.Types.False
                             -> case GHC.Show.$w$cshowsPrec4
                                       0#
                                       Main.main8
                                       (GHC.Types.[] @ GHC.Types.Char) of ww2 { (#,#) ww3 ww4 ->
                                GHC.Types.: @ GHC.Types.Char ww3 ww4 }
                             GHC.Types.True
                             -> case GHC.Show.$w$cshowsPrec4
                                       0#
                                       Main.main7
                                       (GHC.Types.[] @ GHC.Types.Char) of ww2 { (#,#) ww3 ww4 ->
                                GHC.Types.: @ GHC.Types.Char ww3 ww4 } } } } } }) -}
e4c9f09a84835d9b07dc42bed1800b89
  main7 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (-1) -}
5053a12a9f1120c99f34d866536e204c
  main8 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (0) -}
09b6b82d877bbad6bd79091eec5a5945
  main9 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main10) -}
instance [safe] GHC.Show.Show [Main.Ghost] = Main.$fShowGhost
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

