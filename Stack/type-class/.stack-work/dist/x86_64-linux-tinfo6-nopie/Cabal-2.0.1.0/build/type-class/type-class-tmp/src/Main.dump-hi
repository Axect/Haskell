
==================== FINAL INTERFACE ====================
2018-04-04 07:55:22.312376018 UTC

interface main:Main 8022
  interface hash: 0806c689d3b2e56589085b3716732c46
  ABI hash: 7cb8c7aa3cce2a27bbe76cef11af353e
  export-list hash: 6dbb99f692fe5efd286393882b81977e
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 4f2e8bd451dd8c3da9649ee953d74ffe
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.main
  Main.Month{Main.April Main.August Main.December Main.February Main.January Main.July Main.June Main.March Main.May Main.November Main.October Main.September}
module dependencies:
package dependencies: base-4.10.1.0* ghc-prim-0.5.1.1
                      integer-gmp-1.0.1.0
orphans: base-4.10.1.0:GHC.Float base-4.10.1.0:GHC.Base
family instance modules: base-4.10.1.0:Control.Applicative
                         base-4.10.1.0:Data.Either base-4.10.1.0:Data.Functor.Const
                         base-4.10.1.0:Data.Functor.Identity base-4.10.1.0:Data.Monoid
                         base-4.10.1.0:Data.Type.Equality base-4.10.1.0:GHC.Generics
                         base-4.10.1.0:GHC.IO.Exception base-4.10.1.0:GHC.TypeLits
                         base-4.10.1.0:GHC.TypeNats
import  -/  base-4.10.1.0:GHC.Base 782fd99b5e36f3698a26179a49afca64
import  -/  base-4.10.1.0:GHC.Enum 5a1ba50c23f92f669e01f8955f202337
import  -/  base-4.10.1.0:GHC.Real 3c62834bc25e762eabc44149c4cc142d
import  -/  base-4.10.1.0:GHC.Show 0a8ce2b5e533d1c2cfb7954e6736be45
import  -/  base-4.10.1.0:Prelude 31945b7d0084063347fc52506d3a4020
import  -/  base-4.10.1.0:System.IO 6e5bb580370d8d71dc5888f723cea4b4
import  -/  ghc-prim-0.5.1.1:GHC.Classes 93e2660065dce9329577e83d76d8f0d4
import  -/  ghc-prim-0.5.1.1:GHC.Types b1fd0716441595db508c1a74387bf394
959064f9248fab0246755c22240d9b00
  $fEnumMonth :: GHC.Enum.Enum Main.Month
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Main.Month
                  Main.$fEnumMonth_$csucc
                  Main.$fEnumMonth_$cpred
                  Main.$fEnumMonth_$ctoEnum
                  Main.$fEnumMonth_$cfromEnum
                  Main.$fEnumMonth_$cenumFrom
                  Main.$fEnumMonth_$cenumFromThen
                  Main.$fEnumMonth_$cenumFromTo
                  Main.$fEnumMonth_$cenumFromThenTo -}
959064f9248fab0246755c22240d9b00
  $fEnumMonth1 :: [Main.Month]
  {- Unfolding: (Main.$fEnumMonth_go 11#) -}
959064f9248fab0246755c22240d9b00
  $fEnumMonth10 :: [Main.Month]
  {- Unfolding: (Main.$fEnumMonth_go 2#) -}
959064f9248fab0246755c22240d9b00
  $fEnumMonth11 :: [Main.Month]
  {- Unfolding: (Main.$fEnumMonth_go 1#) -}
959064f9248fab0246755c22240d9b00
  $fEnumMonth12 :: [Main.Month]
  {- Unfolding: (Main.$fEnumMonth_go 0#) -}
959064f9248fab0246755c22240d9b00
  $fEnumMonth13 :: Main.Month
  {- Unfolding: (Main.$w$ctoEnum 10#) -}
959064f9248fab0246755c22240d9b00
  $fEnumMonth14 :: Main.Month
  {- Unfolding: (Main.$w$ctoEnum 9#) -}
959064f9248fab0246755c22240d9b00
  $fEnumMonth15 :: Main.Month
  {- Unfolding: (Main.$w$ctoEnum 8#) -}
959064f9248fab0246755c22240d9b00
  $fEnumMonth16 :: Main.Month
  {- Unfolding: (Main.$w$ctoEnum 7#) -}
959064f9248fab0246755c22240d9b00
  $fEnumMonth17 :: Main.Month
  {- Unfolding: (Main.$w$ctoEnum 6#) -}
959064f9248fab0246755c22240d9b00
  $fEnumMonth18 :: Main.Month
  {- Unfolding: (Main.$w$ctoEnum 5#) -}
959064f9248fab0246755c22240d9b00
  $fEnumMonth19 :: Main.Month
  {- Unfolding: (Main.$w$ctoEnum 4#) -}
959064f9248fab0246755c22240d9b00
  $fEnumMonth2 :: [Main.Month]
  {- Unfolding: (Main.$fEnumMonth_go 10#) -}
959064f9248fab0246755c22240d9b00
  $fEnumMonth20 :: Main.Month
  {- Unfolding: (Main.$w$ctoEnum 3#) -}
959064f9248fab0246755c22240d9b00
  $fEnumMonth21 :: Main.Month
  {- Unfolding: (Main.$w$ctoEnum 2#) -}
959064f9248fab0246755c22240d9b00
  $fEnumMonth22 :: Main.Month
  {- Unfolding: (Main.$w$ctoEnum 1#) -}
959064f9248fab0246755c22240d9b00
  $fEnumMonth23 :: Main.Month
  {- Unfolding: (Main.$w$ctoEnum 0#) -}
959064f9248fab0246755c22240d9b00
  $fEnumMonth24 :: Main.Month
  {- Unfolding: (Main.$w$ctoEnum -1#) -}
959064f9248fab0246755c22240d9b00
  $fEnumMonth25 :: Main.Month
  {- Unfolding: (Main.$w$ctoEnum 12#) -}
959064f9248fab0246755c22240d9b00
  $fEnumMonth26 :: Main.Month
  {- Unfolding: (Main.$w$ctoEnum 11#) -}
959064f9248fab0246755c22240d9b00
  $fEnumMonth3 :: [Main.Month]
  {- Unfolding: (Main.$fEnumMonth_go 9#) -}
959064f9248fab0246755c22240d9b00
  $fEnumMonth4 :: [Main.Month]
  {- Unfolding: (Main.$fEnumMonth_go 8#) -}
959064f9248fab0246755c22240d9b00
  $fEnumMonth5 :: [Main.Month]
  {- Unfolding: (Main.$fEnumMonth_go 7#) -}
959064f9248fab0246755c22240d9b00
  $fEnumMonth6 :: [Main.Month]
  {- Unfolding: (Main.$fEnumMonth_go 6#) -}
959064f9248fab0246755c22240d9b00
  $fEnumMonth7 :: [Main.Month]
  {- Unfolding: (Main.$fEnumMonth_go 5#) -}
959064f9248fab0246755c22240d9b00
  $fEnumMonth8 :: [Main.Month]
  {- Unfolding: (Main.$fEnumMonth_go 4#) -}
959064f9248fab0246755c22240d9b00
  $fEnumMonth9 :: [Main.Month]
  {- Unfolding: (Main.$fEnumMonth_go 3#) -}
959064f9248fab0246755c22240d9b00
  $fEnumMonth_$cenumFrom :: Main.Month -> [Main.Month]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (x :: Main.Month) ->
                 case x of wild {
                   Main.January -> Main.$fEnumMonth12
                   Main.February -> Main.$fEnumMonth11
                   Main.March -> Main.$fEnumMonth10
                   Main.April -> Main.$fEnumMonth9
                   Main.May -> Main.$fEnumMonth8
                   Main.June -> Main.$fEnumMonth7
                   Main.July -> Main.$fEnumMonth6
                   Main.August -> Main.$fEnumMonth5
                   Main.September -> Main.$fEnumMonth4
                   Main.October -> Main.$fEnumMonth3
                   Main.November -> Main.$fEnumMonth2
                   Main.December -> Main.$fEnumMonth1 }) -}
959064f9248fab0246755c22240d9b00
  $fEnumMonth_$cenumFromThen ::
    Main.Month -> Main.Month -> [Main.Month]
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U> -}
959064f9248fab0246755c22240d9b00
  $fEnumMonth_$cenumFromThenTo ::
    Main.Month -> Main.Month -> Main.Month -> [Main.Month]
  {- Arity: 3, HasNoCafRefs, Strictness: <S,1*U><S,1*U><S,1*U> -}
959064f9248fab0246755c22240d9b00
  $fEnumMonth_$cenumFromTo ::
    Main.Month -> Main.Month -> [Main.Month]
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U> -}
959064f9248fab0246755c22240d9b00
  $fEnumMonth_$cfromEnum :: Main.Month -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>m, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Main.Month) ->
                 case Main.$w$cfromEnum w of ww { DEFAULT -> GHC.Types.I# ww }) -}
959064f9248fab0246755c22240d9b00
  $fEnumMonth_$cpred :: Main.Month -> Main.Month
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (x :: Main.Month) ->
                 case x of wild {
                   Main.January -> Main.$fEnumMonth24
                   Main.February -> Main.$fEnumMonth23
                   Main.March -> Main.$fEnumMonth22
                   Main.April -> Main.$fEnumMonth21
                   Main.May -> Main.$fEnumMonth20
                   Main.June -> Main.$fEnumMonth19
                   Main.July -> Main.$fEnumMonth18
                   Main.August -> Main.$fEnumMonth17
                   Main.September -> Main.$fEnumMonth16
                   Main.October -> Main.$fEnumMonth15
                   Main.November -> Main.$fEnumMonth14
                   Main.December -> Main.$fEnumMonth13 }) -}
959064f9248fab0246755c22240d9b00
  $fEnumMonth_$csucc :: Main.Month -> Main.Month
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (x :: Main.Month) ->
                 case x of wild {
                   Main.January -> Main.$fEnumMonth22
                   Main.February -> Main.$fEnumMonth21
                   Main.March -> Main.$fEnumMonth20
                   Main.April -> Main.$fEnumMonth19
                   Main.May -> Main.$fEnumMonth18
                   Main.June -> Main.$fEnumMonth17
                   Main.July -> Main.$fEnumMonth16
                   Main.August -> Main.$fEnumMonth15
                   Main.September -> Main.$fEnumMonth14
                   Main.October -> Main.$fEnumMonth13
                   Main.November -> Main.$fEnumMonth26
                   Main.December -> Main.$fEnumMonth25 }) -}
959064f9248fab0246755c22240d9b00
  $fEnumMonth_$ctoEnum :: GHC.Types.Int -> Main.Month
  {- Arity: 1, HasNoCafRefs, Strictness: <S(S),1*U(1*U)>,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: GHC.Types.Int) ->
                 case w of ww { GHC.Types.I# ww1 -> Main.$w$ctoEnum ww1 }) -}
959064f9248fab0246755c22240d9b00
  $fEnumMonth_go :: GHC.Prim.Int# -> [Main.Month]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U>m2 -}
959064f9248fab0246755c22240d9b00
  $fEqMonth :: GHC.Classes.Eq Main.Month
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Main.Month Main.$fEqMonth_$c== Main.$fEqMonth_$c/= -}
959064f9248fab0246755c22240d9b00
  $fEqMonth_$c/= :: Main.Month -> Main.Month -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Inline: (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ (x :: Main.Month) (y :: Main.Month) ->
                 case GHC.Classes.eqInt
                        (Main.$fEnumMonth_$cfromEnum x)
                        (Main.$fEnumMonth_$cfromEnum y) of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
959064f9248fab0246755c22240d9b00
  $fEqMonth_$c== :: Main.Month -> Main.Month -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (m1 :: Main.Month) (m2 :: Main.Month) ->
                 case Main.$fEnumMonth_$cfromEnum m1 of wild { GHC.Types.I# x ->
                 case Main.$fEnumMonth_$cfromEnum m2 of wild1 { GHC.Types.I# y ->
                 GHC.Prim.tagToEnum# @ GHC.Types.Bool (GHC.Prim.==# x y) } }) -}
959064f9248fab0246755c22240d9b00
  $fOrdMonth :: GHC.Classes.Ord Main.Month
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Main.Month
                  Main.$fEqMonth
                  Main.$fOrdMonth_$ccompare
                  Main.$fOrdMonth_$c<
                  Main.$fOrdMonth_$c<=
                  Main.$fOrdMonth_$c>
                  Main.$fOrdMonth_$c>=
                  Main.$fOrdMonth_$cmax
                  Main.$fOrdMonth_$cmin -}
959064f9248fab0246755c22240d9b00
  $fOrdMonth_$c< :: Main.Month -> Main.Month -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Main.Month) (y :: Main.Month) ->
                 case Main.$fOrdMonth_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.False GHC.Types.LT -> GHC.Types.True }) -}
959064f9248fab0246755c22240d9b00
  $fOrdMonth_$c<= :: Main.Month -> Main.Month -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Main.Month) (y :: Main.Month) ->
                 case Main.$fOrdMonth_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.True GHC.Types.GT -> GHC.Types.False }) -}
959064f9248fab0246755c22240d9b00
  $fOrdMonth_$c> :: Main.Month -> Main.Month -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Main.Month) (y :: Main.Month) ->
                 case Main.$fOrdMonth_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.False GHC.Types.GT -> GHC.Types.True }) -}
959064f9248fab0246755c22240d9b00
  $fOrdMonth_$c>= :: Main.Month -> Main.Month -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Main.Month) (y :: Main.Month) ->
                 case Main.$fOrdMonth_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.True GHC.Types.LT -> GHC.Types.False }) -}
959064f9248fab0246755c22240d9b00
  $fOrdMonth_$ccompare ::
    Main.Month -> Main.Month -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U> -}
959064f9248fab0246755c22240d9b00
  $fOrdMonth_$cmax :: Main.Month -> Main.Month -> Main.Month
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Main.Month) (y :: Main.Month) ->
                 case Main.$fOrdMonth_$ccompare x y of wild {
                   DEFAULT -> y GHC.Types.GT -> x }) -}
959064f9248fab0246755c22240d9b00
  $fOrdMonth_$cmin :: Main.Month -> Main.Month -> Main.Month
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Main.Month) (y :: Main.Month) ->
                 case Main.$fOrdMonth_$ccompare x y of wild {
                   DEFAULT -> x GHC.Types.GT -> y }) -}
959064f9248fab0246755c22240d9b00
  $fShowMonth :: GHC.Show.Show Main.Month
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Main.Month
                  Main.$fShowMonth_$cshowsPrec
                  Main.$fShowMonth_$cshow
                  Main.$fShowMonth_$cshowList -}
d3a395bec24672a00ca04c05993f2be6
  $fShowMonth1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.$fShowMonth2) -}
697c32dc75af4112a421797b855e63ea
  $fShowMonth10 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("August"#) -}
5554c0798bc0fde733de3a3007565ea5
  $fShowMonth11 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.$fShowMonth12) -}
af10c2e3e7834ae9cf914f79e8cbc379
  $fShowMonth12 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("July"#) -}
7bf634755229b1a96ff0f5d6f512e703
  $fShowMonth13 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.$fShowMonth14) -}
928b2850bc9d4213be4b8afccef46328
  $fShowMonth14 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("June"#) -}
da71f9eaa86908cadea8b64604051698
  $fShowMonth15 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.$fShowMonth16) -}
b64975a3921c6d3b5a7b8b2196a083f6
  $fShowMonth16 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("May"#) -}
01a8844c158655f36abcab7925303eb6
  $fShowMonth17 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.$fShowMonth18) -}
c4ed762b4143e6d4b875fc85880c1b0e
  $fShowMonth18 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("April"#) -}
8c13e35fa2f06b6233fcafadf43ca30d
  $fShowMonth19 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.$fShowMonth20) -}
042797220224bbf3850bc49d66336bb3
  $fShowMonth2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("December"#) -}
29f4f65cd3f0a8932dd03177473d782f
  $fShowMonth20 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("March"#) -}
5355eaf636583a646cccfeed738ac54f
  $fShowMonth21 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.$fShowMonth22) -}
2141c1fc0bc87254cd3c16adabd9cd22
  $fShowMonth22 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("February"#) -}
2edacf8dbbf9f9a66a7410a268bd025b
  $fShowMonth23 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.$fShowMonth24) -}
917e37dca145f427090c76cf78726059
  $fShowMonth24 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("January"#) -}
86bf7845de2c4fc69edcd5927f5ac6fd
  $fShowMonth3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.$fShowMonth4) -}
cc0998e2b0989365b5f190b9575e5ed8
  $fShowMonth4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("November"#) -}
ceb27f7b2b6adb0ca8cffde4cbf248af
  $fShowMonth5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.$fShowMonth6) -}
48ae9201b5708942011db4b715e7bd39
  $fShowMonth6 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("October"#) -}
59f792ed2b394a878163ac11c234401d
  $fShowMonth7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.$fShowMonth8) -}
e38f3d49802ca40688ae840ec9a262b9
  $fShowMonth8 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("September"#) -}
06b2600d42fa7ddd1605346b71b6c36e
  $fShowMonth9 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.$fShowMonth10) -}
959064f9248fab0246755c22240d9b00
  $fShowMonth_$cshow :: Main.Month -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (x :: Main.Month) ->
                 case x of wild {
                   Main.January -> Main.$fShowMonth23
                   Main.February -> Main.$fShowMonth21
                   Main.March -> Main.$fShowMonth19
                   Main.April -> Main.$fShowMonth17
                   Main.May -> Main.$fShowMonth15
                   Main.June -> Main.$fShowMonth13
                   Main.July -> Main.$fShowMonth11
                   Main.August -> Main.$fShowMonth9
                   Main.September -> Main.$fShowMonth7
                   Main.October -> Main.$fShowMonth5
                   Main.November -> Main.$fShowMonth3
                   Main.December -> Main.$fShowMonth1 }) -}
959064f9248fab0246755c22240d9b00
  $fShowMonth_$cshowList :: [Main.Month] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__ @ Main.Month Main.$w$cshowsPrec) -}
959064f9248fab0246755c22240d9b00
  $fShowMonth_$cshowsPrec ::
    GHC.Types.Int -> Main.Month -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*U><L,1*U>, Inline: [0],
     Unfolding: InlineRule (3, True, True)
                (\ (w :: GHC.Types.Int)
                   (w1 :: Main.Month)
                   (w2 :: GHC.Base.String) ->
                 Main.$w$cshowsPrec w1 w2) -}
a168a591a613cc7bc9a3a6b2399b1f21
  $tc'April :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12159649347197071838##
                   4878963302674043659##
                   Main.$trModule
                   Main.$tc'April2
                   0#
                   Main.$tc'April1) -}
9bc774b811c674dccbe8d6d994b97b05
  $tc'April1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m1, Inline: [~] -}
ab05e910114de1c8c2494ad1840e4704
  $tc'April2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tc'April3) -}
51278f2a9347a0892e24aba95d9e8145
  $tc'April3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'April"#) -}
7f6a5122ce58718abadcb76d0dfa90b5
  $tc'August :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   564420826361990434##
                   8897817195563214226##
                   Main.$trModule
                   Main.$tc'August1
                   0#
                   Main.$tc'April1) -}
aafef9910c6a75c42a65cfba1e544d2b
  $tc'August1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tc'August2) -}
aa15fda1db08b2d125f6a056d77f8b0f
  $tc'August2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'August"#) -}
563f36b400b0f9589b1ff0694511ec93
  $tc'December :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7236193010421798731##
                   17671709188179971688##
                   Main.$trModule
                   Main.$tc'December1
                   0#
                   Main.$tc'April1) -}
b8afb716f2b4930ff3afd27ee85c9461
  $tc'December1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tc'December2) -}
36c2ce52618214cf7a746a5cc22f9dc9
  $tc'December2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'December"#) -}
8d2c516ba0d86769e01827063b03adbc
  $tc'February :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8763370162812181065##
                   2495493233791921584##
                   Main.$trModule
                   Main.$tc'February1
                   0#
                   Main.$tc'April1) -}
4443758f485df44493c29d1e071ca65e
  $tc'February1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tc'February2) -}
4f3e0cb04b26262769131e2a4de9eef3
  $tc'February2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'February"#) -}
0e8631daecdeadf4b74abd07dcdbff2d
  $tc'January :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12511968966680413422##
                   17122212397966204875##
                   Main.$trModule
                   Main.$tc'January1
                   0#
                   Main.$tc'April1) -}
09113096712533d5e5034fdbf714b728
  $tc'January1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tc'January2) -}
811daa1c9d8d76a08db1ff10c66d97a9
  $tc'January2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'January"#) -}
ca1ea9463cbd54a464e7693d27735e60
  $tc'July :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7941322056285496791##
                   1930896011747643266##
                   Main.$trModule
                   Main.$tc'July1
                   0#
                   Main.$tc'April1) -}
76ced5f2de9f3959d82560a2a8788436
  $tc'July1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tc'July2) -}
e1916647c2ee23e99eacec5f7c3702ed
  $tc'July2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'July"#) -}
a3818ca1ea4753d38f5fc964b1ec2278
  $tc'June :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5504270070990441031##
                   16234674287197338116##
                   Main.$trModule
                   Main.$tc'June1
                   0#
                   Main.$tc'April1) -}
ac7533054dcd97e00e38f3e248bf153a
  $tc'June1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tc'June2) -}
91181814e5100efe3facae9762ca14c5
  $tc'June2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'June"#) -}
f3fe3424681c0d015e1e864536e5e0a4
  $tc'March :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12861759230831195474##
                   18151257993190321572##
                   Main.$trModule
                   Main.$tc'March1
                   0#
                   Main.$tc'April1) -}
deddba09c00cf82791ddf93e28ad447a
  $tc'March1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tc'March2) -}
99a9afb611b0c11825b7e09fd55508b2
  $tc'March2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'March"#) -}
646972991f56de328920f93f43a9fc08
  $tc'May :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12105272522315703522##
                   4540763331083528255##
                   Main.$trModule
                   Main.$tc'May1
                   0#
                   Main.$tc'April1) -}
335c04858a14afe3e5a0ebc7e00bf632
  $tc'May1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tc'May2) -}
a3ebc47f54fc8a03c2b843a262279d17
  $tc'May2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'May"#) -}
eee7e9b49047b59795d3fb099ba19386
  $tc'November :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14423967547226462635##
                   4495328906739417866##
                   Main.$trModule
                   Main.$tc'November1
                   0#
                   Main.$tc'April1) -}
1d85ac21cb9192364a0e7e07dd798c14
  $tc'November1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tc'November2) -}
e53145b307d8845922ed32706eeb0bca
  $tc'November2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'November"#) -}
ea69502abdc397e76a98d13ce5abd0d1
  $tc'October :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16538483228025930488##
                   2090980776914333559##
                   Main.$trModule
                   Main.$tc'October1
                   0#
                   Main.$tc'April1) -}
5118a87200bf21b1fe9bb992298c8942
  $tc'October1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tc'October2) -}
5419e10099f730692a7dbedd701831b0
  $tc'October2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'October"#) -}
36ee4f5ad81a5d8ce4b41a97450b1387
  $tc'September :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14496566122542173611##
                   8306089706816157447##
                   Main.$trModule
                   Main.$tc'September1
                   0#
                   Main.$tc'April1) -}
17a1e787cfe533bcfa57f6ce102ea9cb
  $tc'September1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tc'September2) -}
28874f368f06ff7b999b067316ea93d3
  $tc'September2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'September"#) -}
b01b5f9e19e579ece3340207ca238037
  $tcMonth :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10099494369500465718##
                   1542589821947387142##
                   Main.$trModule
                   Main.$tcMonth1
                   0#
                   GHC.Types.krep$*) -}
998b6e5a77bafa14f41d8e6ed9869057
  $tcMonth1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tcMonth2) -}
a28dc4dd559fbafae5fdbea0487cf412
  $tcMonth2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Month"#) -}
9d72b2fddb818bcd8919052935e0f1f3
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Main.$trModule3 Main.$trModule1) -}
3108ceeaf5a318be844de422b45de9d8
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$trModule2) -}
e5875966b74dad2d29772660b8a75e33
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Main"#) -}
33bd129667974f0a0ba4a893af79107d
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$trModule4) -}
d026be77cb9ced20e35a61514e0458aa
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("main"#) -}
959064f9248fab0246755c22240d9b00
  $w$cfromEnum :: Main.Month -> GHC.Prim.Int#
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>, Inline: [0],
     Unfolding: (\ (w :: Main.Month) ->
                 case w of wild {
                   Main.January -> 0#
                   Main.February -> 1#
                   Main.March -> 2#
                   Main.April -> 3#
                   Main.May -> 4#
                   Main.June -> 5#
                   Main.July -> 6#
                   Main.August -> 7#
                   Main.September -> 8#
                   Main.October -> 9#
                   Main.November -> 10#
                   Main.December -> 11# }) -}
959064f9248fab0246755c22240d9b00
  $w$cshowsPrec :: Main.Month -> GHC.Base.String -> GHC.Base.String
  {- Arity: 2, Strictness: <S,1*U><L,1*U>, Inline: [0],
     Unfolding: (\ (w :: Main.Month) (w1 :: GHC.Base.String) ->
                 case w of wild {
                   Main.January -> GHC.Base.++ @ GHC.Types.Char Main.$fShowMonth23 w1
                   Main.February -> GHC.Base.++ @ GHC.Types.Char Main.$fShowMonth21 w1
                   Main.March -> GHC.Base.++ @ GHC.Types.Char Main.$fShowMonth19 w1
                   Main.April -> GHC.Base.++ @ GHC.Types.Char Main.$fShowMonth17 w1
                   Main.May -> GHC.Base.++ @ GHC.Types.Char Main.$fShowMonth15 w1
                   Main.June -> GHC.Base.++ @ GHC.Types.Char Main.$fShowMonth13 w1
                   Main.July -> GHC.Base.++ @ GHC.Types.Char Main.$fShowMonth11 w1
                   Main.August -> GHC.Base.++ @ GHC.Types.Char Main.$fShowMonth9 w1
                   Main.September -> GHC.Base.++ @ GHC.Types.Char Main.$fShowMonth7 w1
                   Main.October -> GHC.Base.++ @ GHC.Types.Char Main.$fShowMonth5 w1
                   Main.November -> GHC.Base.++ @ GHC.Types.Char Main.$fShowMonth3 w1
                   Main.December
                   -> GHC.Base.++ @ GHC.Types.Char Main.$fShowMonth1 w1 }) -}
959064f9248fab0246755c22240d9b00
  $w$ctoEnum :: GHC.Prim.Int# -> Main.Month
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>, Inline: [0] -}
959064f9248fab0246755c22240d9b00
  data Month
    = January
    | February
    | March
    | April
    | May
    | June
    | July
    | August
    | September
    | October
    | November
    | December
ae79e65267dcb6978a1ee90ccf652752
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
a79127d894469486abdb795d1f338b0f
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Main.main10
                        GHC.Types.True
                        s of ds1 { (#,#) ipv ipv1 ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Main.main8
                        GHC.Types.True
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Main.main6
                        GHC.Types.True
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Main.main4
                        GHC.Types.True
                        ipv4 of ds4 { (#,#) ipv6 ipv7 ->
                 GHC.IO.Handle.Text.hPutStr2
                   GHC.IO.Handle.FD.stdout
                   Main.main2
                   GHC.Types.True
                   ipv6 } } } }) -}
be21512a24001666da8ce5eee4992e47
  main10 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main11) -}
69ef82e90486ae2c76b6e510a10c1f13
  main11 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Enumerating months"#) -}
f34d30cd8c3898172f07089519568a54
  main12 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
207222aad014ada8ed90e99ff2816e92
  main2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackAppendCString#
                   Main.main3
                   GHC.Show.$fShowBool1) -}
71e13e54e8c8f9bacce97ec408f449f6
  main3 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("Equating months, January with itself : "#) -}
196cad8f027167b9b4440cc36d745938
  main4 :: GHC.Base.String
  {- Unfolding: (case Main.main5 of wild {
                   []
                   -> GHC.CString.unpackAppendCString#
                        GHC.Show.showList__4
                        (GHC.Types.[] @ GHC.Types.Char)
                   : x xs
                   -> GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.showList__3
                        (Main.$w$cshowsPrec
                           x
                           (let {
                              lvl20 :: [GHC.Types.Char]
                              = GHC.Types.:
                                  @ GHC.Types.Char
                                  GHC.Show.showList__2
                                  (GHC.Types.[] @ GHC.Types.Char)
                            } in
                            letrec {
                              showl :: [Main.Month] -> GHC.Base.String
                                {- Arity: 1, Strictness: <S,1*U> -}
                              = \ (ds2 :: [Main.Month]) ->
                                case ds2 of wild1 {
                                  [] -> lvl20
                                  : y ys
                                  -> GHC.Types.:
                                       @ GHC.Types.Char
                                       GHC.Show.showList__1
                                       (Main.$w$cshowsPrec y (showl ys)) }
                            } in
                            showl xs)) }) -}
649ee710a410ee0854bb9edff5f9c661
  main5 :: [Main.Month]
  {- Unfolding: (Main.$fEnumMonth_$cenumFromThenTo
                   Main.January
                   Main.March
                   Main.December) -}
aedfbab78e56e954ce4e5ddc4859ab46
  main6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main7) -}
c0905c2c43a505c38dcbf4b90a504799
  main7 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Enumerating odd months"#) -}
9e09ca3f2af424900d807236f7297852
  main8 :: GHC.Base.String
  {- Unfolding: (case Main.main9 of wild {
                   []
                   -> GHC.CString.unpackAppendCString#
                        GHC.Show.showList__4
                        (GHC.Types.[] @ GHC.Types.Char)
                   : x xs
                   -> GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.showList__3
                        (Main.$w$cshowsPrec
                           x
                           (let {
                              lvl20 :: [GHC.Types.Char]
                              = GHC.Types.:
                                  @ GHC.Types.Char
                                  GHC.Show.showList__2
                                  (GHC.Types.[] @ GHC.Types.Char)
                            } in
                            letrec {
                              showl :: [Main.Month] -> GHC.Base.String
                                {- Arity: 1, Strictness: <S,1*U> -}
                              = \ (ds2 :: [Main.Month]) ->
                                case ds2 of wild1 {
                                  [] -> lvl20
                                  : y ys
                                  -> GHC.Types.:
                                       @ GHC.Types.Char
                                       GHC.Show.showList__1
                                       (Main.$w$cshowsPrec y (showl ys)) }
                            } in
                            showl xs)) }) -}
bc4e79fea812b90698e4abe53613b43f
  main9 :: [Main.Month]
  {- Unfolding: (Main.main_go 0#) -}
9dc30762fe58145f94c868eab57d3979
  main_go :: GHC.Prim.Int# -> [Main.Month]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U>m2 -}
instance [safe] GHC.Enum.Enum [Main.Month] = Main.$fEnumMonth
instance [safe] GHC.Classes.Eq [Main.Month] = Main.$fEqMonth
instance [safe] GHC.Classes.Ord [Main.Month] = Main.$fOrdMonth
instance [safe] GHC.Show.Show [Main.Month] = Main.$fShowMonth
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

